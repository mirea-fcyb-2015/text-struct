
/*______________________________ StructEngine.cpp ________________________________ */
/**
    \file       Data.cpp
    \brief      ????? ??? ?????? ? ???????
    \author     ?????????? ?. , ???????? ?. , ??????? ?.
    \version    1.0
    \date       22.10.2015
    \remarks
    \par        ??????? ????????:
    \code
        22/10/2015 ? 1.0 ? ???????? ?????
        29/10/2015 - 1.1 - ?????????? ?????? addString(string str),
                                             clearVector()

    \endcode

*/
#include "StructEngine.h"
#include <string>
#include <ctype.h>
#include <algorithm>
#include <functional>
#include <iostream>

//!
//! конструктор
//!
TTextStruct::TTextStruct()
{
    text = NULL;
}

//!
//! Деструктор
//!
TTextStruct::~TTextStruct()
{
        delete text;
}

//!
//! Установить текст
//!
void TTextStruct::setText(TStringList *txt)
{
    text = txt;
}

//!
//! получить текст
//!
TStringList* TTextStruct::getText()
{
    return text;
}

//!
//! удалить все строки
//!
void TTextStruct::delTop()
{
    int CheckForContent = 0;
    if( CheckForContent = findInText("Содержание") != -1); //! Пока что так. тест 
    {
          do{text->Delete(0); ++CheckForContent;}while ( CheckForContent !=35);
    }
}

//!
//! ???????? ...
//!

void TTextStruct::algContent()
{

}

//!
//! ????????? ????
//!
void TTextStruct::fileLoad(UnicodeString fileName)
{
    if(text)
        delete text;
    text = new TStringList();
    text->LoadFromFile(fileName);
}
// ??????? ?????? ????? ? ??????? ?????
void TTextStruct::new_Exchange(int num, String new1)
{
    text->Add(new1);          //?????????? ?????? ? ????? ??????? ?????
    int num1 = text->Count;   //????????? ?????????? ?????
    --num1;                        //????????? ?????? ????????? ?????? (????????? ? 0)
    text->Exchange(num,num1); //?????? ????? - ????????? ?????????? ??????????, ?????????? - ?????????
    text->Delete(num1);       //???????? ????????? ??????
}

int TTextStruct::findInText(AnsiString t)
{
    for (int i = 0; text->Count - 1; ++i ) //??????????? ?? ???? ???????
    {

        if( text->Strings[i] == t )
        {
            return i;
        }

//        //!
//        //! ????? ????? ????????
//        //!
//        string foreword("????????");
//        int pos_L = sg.find(foreword); //?????????? ??????? ??? ?????
//        std::transform(foreword.begin(),foreword.end(), foreword.begin(), ::toupper); // ??? ??????? ?????? ???????? ????????
//        int pos_U = sg.find(foreword);
//        int pos = sg.find(foreword);
//        if( (pos_U != std::string::npos) | (pos_L != std::string::npos))
//        {
//            int pos = sg.find("....");
//            if(pos != std::string::npos)
//            {
//                string s = sg;
//                cout << s;
//            }
//        }
    }
    return -1;
}

//! ????? ?????
//iequals(str1, str2)
//transform(foreword.begin(), foreword.end(), foreword.begin(), ::tolower);
//transform(foreword.begin(), foreword.end(), foreword.begin(), ::toupper);

